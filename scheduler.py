from datetime import datetime, timezone, timedelta

from apscheduler.schedulers.asyncio import AsyncIOScheduler

from config import bot
from controller import UserController
from apscheduler.triggers.cron import CronTrigger
from telebot import types


class ScheduledTasks:

    _instance = None

    def __init__(self, scheduler):
        self.scheduler = scheduler
        self.existing_jobs = {}

    async def process(self):
        UserController.update_all_tokens()
        users_chatids = UserController.get_all_chat_ids()

        try:
            for chat_id in users_chatids:
                await bot.send_message(chat_id=chat_id, text="üîÅ –¢–æ–∫–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")

        except Exception:
            pass

    def run(self):
        moscow_tz = timezone(timedelta(hours=3))

        trigger = CronTrigger(hour=0, minute=0, second=0, timezone=moscow_tz)

        job_id = "daily_task"
        self.scheduler.add_job(
            self.process, trigger, id=job_id, misfire_grace_time=30, coalesce=True
        )
        self.scheduler.start()

    async def add_async_task1(self, user_id):
        job_id1 = f"async_task1_{user_id}"
        trigger_time_1 = datetime.now() + timedelta(hours=1)

        self.scheduler.add_job(
            self.task1,
            'date',
            run_date=trigger_time_1,
            id=job_id1,
            misfire_grace_time=30,
            kwargs={'user_id': user_id}
        )

    async def add_async_task2(self, user_id):
        job_id2 = f"async_task2_{user_id}"
        trigger_time_2 = datetime.now() + timedelta(hours=25)

        self.scheduler.add_job(
            self.task2,
            'date',
            run_date=trigger_time_2,
            id=job_id2,
            misfire_grace_time=30,
            kwargs={'user_id': user_id}
        )

    async def add_async_task3(self, user_id):
        job_id3 = f"async_task3_{user_id}"
        trigger_time_3 = datetime.now() + timedelta(hours=73)

        self.scheduler.add_job(
            self.task3,
            'date',
            run_date=trigger_time_3,
            id=job_id3,
            misfire_grace_time=30,
            kwargs={'user_id': user_id}
        )

    async def task1(self, user_id):
        await bot.send_photo(
            chat_id=user_id,
            photo=open(r'banners/3.png', 'rb'),
            caption='''
–ö–∞–∫ —Ç–µ–±–µ –Ω–∞—à –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç? –û—Ç–ª–∏—á–Ω–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —à–ø–∞—Ä–≥–∞–ª–∫–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –¥–∞? üòÄ

<b>–•–æ—á–µ—à—å, —á—Ç–æ–±—ã –æ–Ω –≤—Å–µ–≥–¥–∞ –±—ã–ª —É —Ç–µ–±—è –ø–æ–¥ —Ä—É–∫–æ–π? üì≤</b>

–û—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—É –ö–∞–º–ø—É—Å –∏ –ø–æ–ª—É—á–∏:

üîπ<b>10 —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –ö–∞–º–ø—É—Å:</b>
–û–Ω —É–∂–µ –∑–Ω–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ —É—á–µ–±–µ, –∞ –µ—â–µ –ø–æ–º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã ü§ñ

üîπ <b>2 –∑–∞–ø—Ä–æ—Å–∞ –≤ –ö–∞–º–ø—É—Å –ë–∏–±–ª–∏–æ—Ç–µ–∫—É:</b>
–ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ —Ä–µ—à–∞—Ç—å —Å–∫—É—á–Ω—ã–µ –∏–ª–∏ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏–ª–∏ —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –ø–æ–∏—Å–∫ —Ä–µ—à–µ–Ω–∏—è ‚Äì –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π –Ω–∞—à—É –ë–∏–±–ª–∏–æ—Ç–µ–∫—É, —Ç–∞–º —É–∂–µ –≤—Å–µ –µ—Å—Ç—å! üìö
 
üîπ <b>299 –±–æ–Ω—É—Å–Ω—ã—Ö —Ä—É–±–ª–µ–π –Ω–∞ –ö–∞–º–ø—É—Å –≠–∫—Å–ø–µ—Ä—Ç:</b>
–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏ —Å –ª—é–±–æ–π —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç–æ–π —É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞ –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏ –∏ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ —Ä—É–±–ª–∏ –Ω–∞ –µ–≥–æ —É—Å–ª—É–≥–∏.

–ù—É —á—Ç–æ, –Ω–∞—á–Ω–µ–º —É—á–∏—Ç—å—Å—è –±–µ–∑ –ø—Ä–æ–±–ª–µ–º? üòâ
–¢–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –ö–∞–º–ø—É—Å! üëá
        ''',
            parse_mode='html',
            reply_markup=types.InlineKeyboardMarkup(
                row_width=2,
                keyboard=[
                    [
                        types.InlineKeyboardButton(
                            text="–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É üî•",
                            url="https://kampus.ai/ecosystem/subscription/?entry=codbot_2 ",
                        )
                    ]
                ]
            )
        )

    async def task2(self, user_id):
        await bot.send_photo(
            chat_id=user_id,
            photo=open(r'banners/5.png', 'rb'),
            caption='''
–ö–∞–º–ø—É—Å ‚Äì —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ —É—á–µ–±–µ ü§ñ

–û–Ω —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, —Ç–∞–∫ —á—Ç–æ <b>–µ—Å–ª–∏ —Ç—ã —É—á–∏—à—å—Å—è ‚Äì –ö–∞–º–ø—É—Å —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è! ‚ù§Ô∏è</b>

<b>–° –ö–∞–º–ø—É—Å —Ç—ã —Å–º–æ–∂–µ—à—å:</b>

<b>‚ûï –†–µ—à–∞—Ç—å –≤–µ—Ä–Ω–æ –¥–∞–∂–µ —Å–∞–º—ã–µ —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Å—Ç—ã</b>, –ø—Ä–∏–¥—É–º–∞–Ω–Ω—ã–µ —Ç–≤–æ–∏–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –ª–∏—á–Ω–æ, –≤—Å–µ–≥–æ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã;
<b>‚ûï –°–¥–∞–≤–∞—Ç—å –±–µ–∑ –ø—Ä–æ–±–ª–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã</b>, –∑–∞—á–µ—Ç—ã –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É—Å–ø–µ–ª –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–ª–Ω–æ–≤–∞–ª—Å—è –ø–µ—Ä–µ–¥ —ç–∫–∑–∞–º–µ–Ω–æ–º üòâ
<b>‚ûï –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å –¥–µ–ª–∞ –ø–æ —É—á–µ–±–µ</b>, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–Ω–∏–º–∞—é—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–ª–∏ –Ω–µ—Ä–≤–æ–≤ üòÄ
<b>‚ûï –≠–∫–æ–Ω–æ–º–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Å–∫—É—á–Ω—ã—Ö –∏–ª–∏ –Ω–µ–ø—Ä–æ—Ñ–∏–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö</b>, —á—Ç–æ–±—ã –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ. 

<b>–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ö–∞–º–ø—É—Å —Å—Ç–æ–∏—Ç –∫–∞–∫ —à–∞—É—Ä–º–∞ –æ–∫–æ–ª–æ —Ç–≤–æ–µ–≥–æ —É–Ω–∏–≤–µ—Ä–∞, –∞ –ø–æ–ª—å–∑—ã –≤ –ø–æ–¥–ø–∏—Å–∫–µ –≥–æ—Ä–∞–∞–∞–∞–∑–¥–æ –±–æ–ª—å—à–µ! –£–±–µ–¥–∏—Å—å —Å–∞–º üî•</b>
''',
            parse_mode='html',
            reply_markup=types.InlineKeyboardMarkup(
                row_width=2,
                keyboard=[
                    [
                        types.InlineKeyboardButton(
                            text="–•–æ—á—É –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ö–∞–º–ø—É—Å!",
                            url="https://kampus.ai/ecosystem/subscription/?entry=codbot_2 ",
                        )
                    ]
                ]
            )
        )

    async def task3(self, user_id):
        await bot.send_photo(
            chat_id=user_id,
            photo=open(r'banners/6.png', 'rb'),
            caption='''
–ú–æ–∂–µ—Ç, –ö–∞–º–ø—É—Å –Ω–µ –¥–ª—è —Ç–µ–±—è? üò± –ï—Å–ª–∏‚Ä¶ üëá

‚ùå –¢—ã —É–∂–µ <b>–∑–∞–∫–æ–Ω—á–∏–ª —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç;</b>
‚ùå <b>–¢–µ–±—è –º–∞–ª–æ –≤–æ–ª–Ω—É–µ—Ç</b> –Ω–∞–ª–∏—á–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏;

–≠—Ç–æ –Ω–µ –ø—Ä–æ —Ç–µ–±—è? –•–æ—á–µ—à—å:

‚úÖ <b>–£—á–∏—Ç—å—Å—è –ª–µ–≥–∫–æ –∏ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞</b>, –ø–æ–ª—É—á–∞—è —Ö–æ—Ä–æ—à–∏–µ –æ—Ü–µ–Ω–∫–∏? üòé 
‚úÖ <b>–ò–º–µ—Ç—å –ø–æ–¥ —Ä—É–∫–æ–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã</b> –∏ –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è? 
‚úÖ <b>–û—Ç–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ö–∞–º–ø—É—Å—É</b>, –æ—Å–≤–æ–±–æ–¥–∏–≤ —Å–≤–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤–∞–∂–Ω—ã—Ö –¥–µ–ª –∏–ª–∏ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–≥–æ —Å–Ω–∞? 

–û—Ñ–æ—Ä–º–ª—è–π –º–µ—Å—è—á–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –ö–∞–º–ø—É—Å <b> –≤—Å–µ–≥–æ –∑–∞ 299 —Ä—É–± üëå</b>


üëç–¢—ã –ø–æ–ª—É—á–∏—à—å –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, <b>–∫–æ—Ç–æ—Ä—ã–π –Ω–∞–π–¥–µ—Ç –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–µ—Å—Ç, –Ω–∞–ø–∏—à–µ—Ç —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ä–µ—à–∏—Ç –∑–∞–¥–∞—á—É –∑–∞ —Ç–µ–±—è. </b>

üëç<b>–ö–∞–º–ø—É—Å –ë–∏–±–ª–∏–æ—Ç–µ–∫—É</b>, –≥–¥–µ —Å–æ–±—Ä–∞–Ω—ã –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è —É—á–µ–±—ã. 


üëç<b>–ò –±–æ–Ω—É—Å–Ω—ã–µ 299 —Ä—É–±–ª–µ–π –Ω–∞ –ö–∞–º–ø—É—Å –≠–∫—Å–ø–µ—Ä—Ç</b>, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Å –ª—é–±–æ–π —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç–æ–π! 


–ù—É —á—Ç–æ, –Ω–∞—á–Ω–µ–º —É—á–∏—Ç—å—Å—è –±–µ–∑ –ø—Ä–æ–±–ª–µ–º? üòâ

                        ''',
            parse_mode='html',
            reply_markup=types.InlineKeyboardMarkup(
                row_width=2,
                keyboard=[
                    [
                        types.InlineKeyboardButton(
                            text="–ë–µ—Ä—É –ø–æ–¥–ø–∏—Å–∫—É üéâ",
                            url="https://kampus.ai/ecosystem/subscription/?entry=codbot_2 ",
                        )
                    ]
                ]
            )
        )


scheduler = AsyncIOScheduler()
scheduled_tasks = ScheduledTasks(scheduler)
